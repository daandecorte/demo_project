@page "/cities"
@inject HttpClient Http;

<h3>Cities</h3>

@if (cities == null)
{
    <p><em>Loading...</em></p>
}
else if (cities.Count == 0)
{
    <p>No cities found.</p>
}
else
{
    <table class="table-bordered"> 
        <thead>
            <tr>
                <th>Name</th>
                <th>Country</th>
                <th>Population</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var city in cities)
            {
                <tr>
                    <td>@city.Name</td>
                    <td>@city.Country</td>
                    <td>@city.Population</td>
                    <td>
                        <a href="/cities/edit/@city.Id">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<City>? cities;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            cities = await Http.GetFromJsonAsync<List<City>>("/api/v1/city");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching cities: {ex.Message}");
            cities = new List<City>();
        }
    }
}
